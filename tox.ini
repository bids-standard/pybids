[tox]
requires =
  tox>=4
  tox-uv
envlist =
  py31{0,1,2,3,4}-{full,pre}
  py310-min
skip_missing_interpreters = true

# Configuration that allows us to split tests across GitHub runners effectively
[gh-actions]
python =
  3.10: py310
  3.11: py311
  3.12: py312
  3.13: py313
  3.14: py314

[gh-actions:env]
DEPENDS =
  min: min
  full: full
  pre: pre

[testenv]
description = Pytest with coverage
labels = test
pip_pre =
  pre: true
pass_env =
  # getpass.getuser() sources for Windows:
  LOGNAME
  USER
  LNAME
  USERNAME
  # Pass user color preferences through
  PY_COLORS
  FORCE_COLOR
  NO_COLOR
  CLICOLOR
  CLICOLOR_FORCE
setenv =
  pre: PIP_EXTRA_INDEX_URL=https://pypi.anaconda.org/scientific-python-nightly-wheels/simple
  pre: UV_INDEX=https://pypi.anaconda.org/scientific-python-nightly-wheels/simple
  pre: UV_INDEX_STRATEGY=unsafe-best-match
extras = test
runner =
  full: uv-venv-lock-runner
  !full: uv-venv-runner
uv_resolution =
  min: lowest-direct

commands =
  pytest --doctest-modules -v \
    --cov src -cov tests --cov-report xml --cov-report term \
    src/ tests/ {posargs:-n auto}

[testenv:docs]
description = Build documentation site
labels = docs
allowlist_externals = make
extras = doc
commands =
  make -C doc html

[testenv:spellcheck]
description = Check spelling
labels = check
deps =
  codespell[toml]
skip_install = true
commands =
  codespell . {posargs}

[testenv:build{,-strict}]
labels =
  check
  pre-release
deps =
  build
  twine
skip_install = true
set_env =
  build-strict: PYTHONWARNINGS=error
commands =
  python -m build
  python -m twine check dist/*

[testenv:publish]
depends = build
labels = release
deps =
  twine
skip_install = true
commands =
  python -m twine upload dist/*
