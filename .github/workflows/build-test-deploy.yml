# This file tests the claimed support range of PyBIDS including
#
# * Operating systems: Linux, OSX

on:
  push:
    branches:
      - master
      - maint/*
      - test-pypi-uploads
    tags:
      - '*'
  pull_request: {}
  schedule:
    # 8am EST / 9am EDT Mondays
    - cron: '0 13 * * 1'
  # Allow job to be triggered manually from GitHub interface
  workflow_dispatch:

defaults:
  run:
    shell: bash

# Force tox and pytest to use color
env:
  FORCE_COLOR: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Build & verify package
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: hynek/build-and-inspect-python-package@v2
        with:
          attest-build-provenance-github: ${{ github.event_name != 'pull_request' }}

  test:
    # Check each OS, all supported Python, minimum versions and latest releases
    runs-on: ${{ matrix.os }}
    needs: [build]
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
        dependencies: ['full', 'pre']
        source: ['repo']
        include:
          - os: ubuntu-latest
            python-version: '3.9'
            dependencies: min
            source: 'repo'
          - os: ubuntu-latest
            python-version: '3'
            dependencies: full
            source: 'sdist'
        exclude:
          # Drop pre tests for SPEC-0-unsupported Python versions
          # See https://scientific-python.org/specs/spec-0000/
          - python-version: '3.9'
            dependencies: pre
          - python-version: '3.10'
            dependencies: pre
      fail-fast: false
    continue-on-error: ${{ matrix.dependencies == 'pre' }}

    env:
      DEPENDS: ${{ matrix.dependencies }}

    steps:
      - uses: actions/checkout@v5
        if: matrix.source == 'repo'
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Download packages built by build-and-inspect-python-package
        if: matrix.source == 'sdist'
        uses: actions/download-artifact@v5
        with:
          name: Packages
          path: dist
      - name: Extract sdist
        if: matrix.source == 'sdist'
        run: tar --strip-components=1 -xzf dist/*.tar.gz
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v7
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install tox
        run: |
          uv tool install tox --with=tox-uv --with=tox-gh-actions
      - name: Show tox config
        run: tox c
      - name: Run tox
        run: tox -v --exit-and-dump-after 1200
      - uses: codecov/codecov-action@v5
        if: ${{ always() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  test-publish:
    name: Push package to test.pypi.org
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      attestations: write
      id-token: write

    steps:
      - name: Download packages built by build-and-inspect-python-package
        uses: actions/download-artifact@v5
        with:
          name: Packages
          path: dist

      - name: Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

  publish:
    name: Publish released package to pypi.org
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: [test, test-publish]
    permissions:
      attestations: write
      id-token: write

    steps:
      - name: Download packages built by build-and-inspect-python-package
        uses: actions/download-artifact@v5
        with:
          name: Packages
          path: dist

      - name: Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
